<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="400"
   height="400"
   onload="main()"
   id="svg3350"
   inkscape:version="0.91 r13725"
   sodipodi:docname="grav_wind_control.svg">
  <metadata
     id="metadata3363">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title>
      Slide Control (scripted)
    </dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id="defs3361" />
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1920"
     inkscape:window-height="1058"
     id="namedview3359"
     showgrid="false"
     inkscape:zoom="0.7275"
     inkscape:cx="200"
     inkscape:cy="50"
     inkscape:window-x="1507"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg3350" />
  <title
     id="title3352">
      Slide Control (scripted)
    </title>
  <script
     type="text/javascript"
     id="script3354"><![CDATA[
        var    button = null;
        var      left = 50;
        var     right = 250;
        var   buttonX = 65;
        var   offsetX = null;
        var offsetSet = null;
        var      down = null;
        var       doc = null;
        var       led = null;
        var     level = null;

        function main(evt)
          {
          doc = document;
          led = doc.getElementById("Indicator");
          setLevel();
          }

        function setLevel()
          {
          level = 20 + 80 * (buttonX - left) / (right - left);
          led.setAttributeNS(null, 'fill', "rgb(20%," + level + "%, 20%)");
          }

        function on(evt)
        /*
        ** onmouseover: just change colour
        */
          {
          button = evt.target;
          button.setAttributeNS(null, 'fill', "red");
          return;
          }

        function off(evt)
        /*
        ** onmouseout: reset colour
        **             imobilise button, even if mouse button still down
        **             otherwise it will start to move again as soon as
        **             the cursor touches the button again
        **
        */
          {
          button = evt.target;
          button.setAttributeNS(null, 'fill', "crimson");
          down = 0;
          offsetSet = 0;
          return;
          }

        function free(evt)
        /*
        ** onmousedown: set colour
        **              set cursor position within button
        **              flag cursor down
        */
          {
          button = evt.target;
          button.setAttributeNS(null, 'fill', "orangered");
          offsetX = evt.clientX - buttonX;
          offsetSet = 1;
          down = 1;
          return;
          }

        function lock(evt)
        /*
        ** onmouseup: reset colour
        **            imobilise button
        ** note that if the cursor is already off the button
        ** this function does nothing but theflags will already
        ** have been set by off()
        */
          {
          button = evt.target;
          button.setAttributeNS(null, 'fill', "red");
          down = 0;
          offsetSet = 0;
          return;
          }

        function slide(evt)
        //
        // onmousemove: only acts if onmousedown is more recent
        //              than onmouseup and onmouseover
        // at the end stops, the button stops moving in that direction.
        // Further cursor movement 'slips'
        // but if the cursor movement reverses, still over the button,
        // then the button immediately responds, as the cursor 'grips' again
        // finally, position the button. noting that
        // buttonX, left & right limits all refer to centre of button
        // but rectangle position x value is to left hand side
        // This function is at present ugly and NEEDS TIDYING
        //
          {
          button = evt.target;
          if (down === 1 && left <= buttonX && buttonX <= right)
           {
           if (offsetSet === 0)
             {
             offsetX = evt.clientX - buttonX;
             offsetSet = 1;
             }
           buttonX = evt.clientX - offsetX;
           if (buttonX < left)
             {
             buttonX = left;
             offsetSet = 0;
             }
           else if (buttonX > right)
             {
             buttonX = right;
             offsetSet = 0;
             }
           button.setAttributeNS(null, 'x', buttonX - 25);
           setLevel();
           }
          return;
          }

      ]]></script>
  <rect
     id="Slide"
     x="82.731956"
     y="167.3024"
     width="250"
     height="30"
     style="fill:#c0c0c0;fill-opacity:1;stroke:#000000;stroke-width:1" />
  <rect
     id="Button"
     onmouseover="on(evt)"
     onmouseout="off(evt)"
     onmousedown="free(evt)"
     onmouseup="lock(evt)"
     onmousemove="slide(evt)"
     focusHighlight="none"
     x="97.731956"
     y="157.3024"
     width="50"
     height="50"
     rx="10"
     ry="10"
     style="fill:#dc143c;fill-opacity:1;stroke:#000000;stroke-width:1" />
  <rect
     id="Indicator"
     x="325"
     y="320"
     width="60"
     height="60"
     rx="10"
     ry="10"
     style="fill:#0000ff;fill-opacity:1;stroke:#000000;stroke-width:1" />
  <rect
     id="Slide-9"
     x="-310.56702"
     y="196.68384"
     width="250"
     height="30"
     style="fill:#c0c0c0;fill-opacity:1;stroke:#000000;stroke-width:1"
     transform="matrix(0,-1,1,0,0,0)" />
  <rect
     id="Button-1"
     onmouseover="on(evt)"
     onmouseout="off(evt)"
     onmousedown="free(evt)"
     onmouseup="lock(evt)"
     onmousemove="slide(evt)"
     focusHighlight="none"
     x="185.53265"
     y="254.0378"
     width="50"
     height="50"
     rx="10"
     ry="10"
     style="fill:#dc143c;fill-opacity:1;stroke:#000000;stroke-width:1" />
</svg>
